@using Microsoft.AspNetCore.Identity
@using Business.Services 
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject BasketItemService basketItemService

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                Hello,
                @{
                    var userName = User.Identity.Name.Split('@');
                    @userName[0].ToUpper();
                }
            </a>
        </li>
        <li class="nav-item">
            <a class="btn btn-warning" asp-action="Index" asp-controller="Basket" asp-route-userId="@UserManager.GetUserId(User)">
                @{
                    var itemcount = await basketItemService.GetBasketItemsCountByUserId(UserManager.GetUserId(User));
                }
                <i class="fa-solid fa-cart-shopping fa-xl"></i>
                <span class="badge bg-light text-black"> @itemcount</span>
            </a>
        </li>

        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
